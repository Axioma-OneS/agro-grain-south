#Область ПрограммныйИнтерфейс

// Определяет объекты конфигурации, в модулях менеджеров которых размещена процедура ДобавитьКомандыПечати,
// формирующая список команд печати, предоставляемых этим объектом.
// Синтаксис процедуры ДобавитьКомандыПечати см. в документации к подсистеме.
//
// Параметры:
//  СписокОбъектов - Массив - менеджеры объектов с процедурой ДобавитьКомандыПечати.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт

	//++ Локализация
	СписокОбъектов.Добавить(Документы.ВнесениеДенежныхСредствВКассуККМ);
	СписокОбъектов.Добавить(Документы.ВозвратПодарочныхСертификатов);
	СписокОбъектов.Добавить(Документы.ВыемкаДенежныхСредствИзКассыККМ);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПокупок);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПродаж);
	СписокОбъектов.Добавить(Документы.ЗаявлениеОВвозеТоваров);
	СписокОбъектов.Добавить(Документы.ЗапросКоммерческихПредложенийПоставщиков);
	СписокОбъектов.Добавить(Документы.ЗапросКоммерческогоПредложенияОтКлиента);
	СписокОбъектов.Добавить(Документы.ЗаявлениеОВвозеТоваров);
	СписокОбъектов.Добавить(Документы.КоммерческоеПредложениеКлиенту);
	СписокОбъектов.Добавить(Документы.КоммерческоеПредложениеПоставщика);
	СписокОбъектов.Добавить(Документы.ОперацияПоЯндексКассе);
	СписокОбъектов.Добавить(Документы.ЧекККМ);
	СписокОбъектов.Добавить(Документы.ЧекККМВозврат);
	СписокОбъектов.Добавить(Документы.ЧекККМКоррекции);
	
	СписокОбъектов.Добавить(Справочники.ПодарочныеСертификаты);
	
	// ЭлектронноеВзаимодействие
	ЭлектронноеВзаимодействие.ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов);
	// Конец ЭлектронноеВзаимодействие


	// ИнтеграцияЕГАИС
	СписокОбъектов.Добавить(Документы.АктПостановкиНаБалансЕГАИС);
	СписокОбъектов.Добавить(Документы.АктСписанияЕГАИС);
	СписокОбъектов.Добавить(Документы.ВозвратИзРегистра2ЕГАИС);
	СписокОбъектов.Добавить(Документы.ЗапросАкцизныхМарокЕГАИС);
	СписокОбъектов.Добавить(Документы.ОстаткиЕГАИС);
	СписокОбъектов.Добавить(Документы.ОтчетЕГАИС);
	СписокОбъектов.Добавить(Документы.ПередачаВРегистр2ЕГАИС);
	СписокОбъектов.Добавить(Документы.ЧекЕГАИС);
	СписокОбъектов.Добавить(Документы.ЧекЕГАИСВозврат);
	СписокОбъектов.Добавить(Документы.ТТНИсходящаяЕГАИС);
	СписокОбъектов.Добавить(Документы.ТТНВходящаяЕГАИС);
	СписокОбъектов.Добавить(Обработки.ПечатьРазделаБСправкиТТН);
	// Конец ИнтеграцияЕГАИС
	
	// ИнтеграцияВЕТИС
	СписокОбъектов.Добавить(Справочники.ВетеринарноСопроводительныйДокументВЕТИС);
	СписокОбъектов.Добавить(Документы.ВходящаяТранспортнаяОперацияВЕТИС);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияПродукцииВЕТИС);
	СписокОбъектов.Добавить(Документы.ИсходящаяТранспортнаяОперацияВЕТИС);
	СписокОбъектов.Добавить(Документы.ЗапросСкладскогоЖурналаВЕТИС);
	СписокОбъектов.Добавить(Документы.ПроизводственнаяОперацияВЕТИС);
	// Конец ИнтеграцияВЕТИС
	
	// ИнтеграцияГИСМ
	СписокОбъектов.Добавить(Документы.ПеремаркировкаТоваровГИСМ);
	СписокОбъектов.Добавить(Документы.МаркировкаТоваровГИСМ);
	// Конец ИнтеграцияГИСМ
	
	//Начало ИнтеграцияИСМП
	СписокОбъектов.Добавить(Документы.МаркировкаТоваровИСМП);
	СписокОбъектов.Добавить(Документы.ОтгрузкаТоваровИСМП);
	СписокОбъектов.Добавить(Документы.ПриемкаТоваровИСМП);
	СписокОбъектов.Добавить(Документы.ВыводИзОборотаИСМП);
	СписокОбъектов.Добавить(Документы.ВозвратВОборотИСМП);
	СписокОбъектов.Добавить(Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ);
	СписокОбъектов.Добавить(Документы.ПеремаркировкаТоваровИСМП);
	СписокОбъектов.Добавить(Документы.СписаниеКодовМаркировкиИСМП);
	//Конец ИнтеграцияИСМП
	
	УчетНДСУП.ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов);
	//-- Локализация
	
КонецПроцедуры

// Переопределяет список команд печати, получаемый функцией УправлениеПечатью.КомандыПечатиФормы.
// Используется для общих форм, у которых нет модуля менеджера для размещения в нем процедуры ДобавитьКомандыПечати,
// для случаев, когда штатных средств добавления команд в такие формы недостаточно. Например, если нужны свои команды,
// которых нет в других объектах.
// 
// Параметры:
//  ИмяФормы             - Строка - полное имя формы, в которой добавляются команды печати;
//  КомандыПечати        - ТаблицаЗначений - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати;
//  СтандартнаяОбработка - Булево - при установке значения Ложь не будет автоматически заполняться коллекция КомандыПечати.
//
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ИмяФормы = "Документ.ЗапросАкцизныхМарокЕГАИС.Форма.ФормаДокумента"
		ИЛИ ИмяФормы = "Документ.ЗапросАкцизныхМарокЕГАИС.Форма.ФормаСписка"
		ИЛИ ИмяФормы = "Документ.ЗапросАкцизныхМарокЕГАИС.Форма.ФормаСпискаДокументов" Тогда
		
		Если ПраваПользователяПовтИсп.ПечатьЭтикетокИЦенников() Тогда
			СтандартнаяОбработка = Ложь;
			
			КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
			
			КомандаПечати = КоллекцияКомандПечати.Добавить();
			КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьАкцизныхМарок";
			КомандаПечати.Идентификатор = "АкцизныеМарки";
			КомандаПечати.Представление = НСтр("ru = 'Печать акцизных марок'");
			КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		КонецЕсли;
		
	ИначеЕсли ИмяФормы = "Справочник.ШтрихкодыУпаковокТоваров.Форма.ФормаЭлемента"
		ИЛИ ИмяФормы = "Справочник.ШтрихкодыУпаковокТоваров.Форма.ФормаСписка" Тогда
		
		СтандартнаяОбработка = Ложь;
		Если НЕ ПраваПользователяПовтИсп.ПечатьЭтикетокИЦенников() Тогда
			Возврат;
		КонецЕсли;
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		
		КомандаПечати               = КоллекцияКомандПечати.Добавить();
		КомандаПечати.Обработчик    = "УправлениеПечатьюУТКлиентЛокализация.ПечатьШтрихкодовУпаковок";
		КомандаПечати.Идентификатор = "ШтрихкодыУпаковок";
		КомандаПечати.Представление = НСтр("ru = 'Печать: Штрихкод упаковки'");
		
		// Этикетка ИСМП
		КомандаПечати               = КоллекцияКомандПечати.Добавить();
		КомандаПечати.Идентификатор = "ЭтикеткаКодМаркировкиИСМП";
		КомандаПечати.Представление = НСтр("ru = 'Печать: Этикетка (одежда, обувь, табак...)'");
		КомандаПечати.Обработчик    = "ПечатьЭтикетокИСМПКлиент.ПечатьШтрихкодыУпаковокИСМП";
		КомандаПечати.ФункциональныеОпции = "ВестиУчетМаркируемойПродукцииИСМП";
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
	
	ИначеЕсли СтрНачинаетсяС(ИмяФормы, "Документ.ЗаказПоставщику.Форма.") Тогда
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		
		КомандаПечати = КоллекцияКомандПечати.Добавить();
		КомандаПечати.Идентификатор  = "ЗаказПоставщику_ПечатьКодовМаркировки";
		КомандаПечати.Представление  = НСтр("ru = 'Коды маркировки'");
		КомандаПечати.Обработчик     = "СобытияФормИСМПКлиент.КомандаОткрытьФормуПечатиКодовМаркировки";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			КомандаПечати,
			"ХозяйственнаяОперация",
			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту"));
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	КонецЕсли;

	
	УчетНДСУП.ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка);	
	//-- Локализация
	
КонецПроцедуры

// Дополнительные настройки списка команд печати в журналах документов.
//
// см. УправлениеПечатьюПереопределяемый.ПриПолученииНастроекСпискаКомандПечати()
//
Процедура ПриПолученииНастроекСпискаКомандПечати(НастройкиСписка) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Позволяет изменить внешний вид и поведение формы, например, разместить на ней дополнительные элементы:
// информационные надписи, кнопки, гиперссылки, различные настройки и т.п.
//
// см. УправлениеПечатьюПереопределяемый.ПечатьДокументовПриСозданииНаСервере()
//
Процедура ПечатьДокументовПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти
